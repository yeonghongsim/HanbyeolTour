<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="boardMapper">
	
	<resultMap type="com.project.team.board.vo.TypeRequestVO" id="typeRequest">
		<id 	column="TYPE_REQUEST_CODE" property="typeRequestCode"/>
		<result column="TYPE_REQUEST_NAME" property="typeRequestName"/>
	</resultMap>

	<resultMap type="com.project.team.board.vo.BoardVO" id="board">
		<id 	column="HBT_BOARD_NUM" 			property="hbtBoardNum"/>
		<result column="HBT_BOARD_TITLE" 		property="hbtBoardTitle"/>
		<result column="HBT_BOARD_CONTENT" 		property="hbtBoardContent"/>
		<result column="IS_PRIVATE" 			property="isPrivate"/>
		<result column="PRIVATE_PW" 			property="privatePw"/>
		<result column="HBT_BOARD_REG_DATE" 	property="hbtBoardRegDate"/>
		<result column="HBT_BOARD_CNT" 			property="hbtBoardCnt"/>
		<result column="IS_NOTICE" 				property="isNotice"/>
		<result column="REPLY_CNT" 				property="replyCnt"/>
		<association property="memberVO" 		resultMap="memberMapper.member"></association>
	</resultMap>
	
	<resultMap type="com.project.team.board.vo.BoardRequestVO" id="boardRequest">
		<id 	column="HBT_BOARD_REQUEST_NUM" 			property="hbtBoardRequestNum"/>
		<result column="HBT_BOARD_REQUEST_TITLE" 		property="hbtBoardRequestTitle"/>
		<result column="HBT_BOARD_REQUEST_CONTENT" 		property="hbtBoardRequestContent"/>
		<result column="HBT_BOARD_REQUEST_REG_DATE" 	property="hbtBoardRequestRegDate"/>
		<association property="typeRequestVO" 			resultMap="typeRequest"/>
		<association property="memberVO" 				resultMap="memberMapper.member"/>
	</resultMap>
	
	<resultMap type="com.project.team.board.vo.BoardSideMenuVO" id="boardSideMenu">
		<id 	column="BOARD_SIDE_MENU_CODE" property="boardSideMenuCode"/>
		<result column="BOARD_SIDE_MENU_NAME" property="boardSideMenuName"/>
		<result column="BOARD_SIDE_MENU_URL" property="boardSideMenuUrl"/>
	</resultMap>

	<resultMap type="com.project.team.board.vo.FreqRequestVO" id="freqRequest">
		<id 	column="FREQ_REQUEST_CODE" property="freqRequestCode"/>
		<result column="FREQ_REQUEST_TITLE" property="freqRequestTitle"/>
		<result column="FREQ_REQUEST_CONTENT" property="freqRequestContent"/>
		<association property="memberVO" resultMap="memberMapper.member"></association>
		<association property="typeRequestVO" resultMap="typeRequest"></association>
	</resultMap>
	
	
	<select id="getTypeRequestList" resultMap="typeRequest">
		SELECT TYPE_REQUEST_CODE
			, TYPE_REQUEST_NAME
		FROM TYPE_REQUEST
	</select>
	
	<select id="getBoardSideMenuList" resultMap="boardSideMenu">
		SELECT BOARD_SIDE_MENU_CODE
			, BOARD_SIDE_MENU_NAME
			, BOARD_SIDE_MENU_URL
		FROM BOARD_SIDE_MENU
	</select>
	
	<select id="getNextByFreqReqCode" resultType="String">
		SELECT 'FREQ_REQ_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(FREQ_REQUEST_CODE, 10))), 0) + 1, 3, '0') 
	    FROM HBT_FREQ_REQUEST
	</select>
	
	<select id="getNextByBoardNum" resultType="String">
		SELECT 'BOARD_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(HBT_BOARD_NUM, 7))), 0) + 1, 3, '0')
		FROM HBT_BOARD
	</select>
	
	<insert id="regBoard">
		INSERT INTO HBT_BOARD (
		    HBT_BOARD_NUM
		    , HBT_BOARD_TITLE
		    , HBT_BOARD_CONTENT
		    , MEM_CODE
		    <if test='isPrivate.equals("Y")'>
		    , IS_PRIVATE
		    , PRIVATE_PW
		    </if>
		    <if test='isNotice.equals("Y")'>
		    , IS_NOTICE
		    </if>
		) VALUES (
		    #{hbtBoardNum}
		    , #{hbtBoardTitle}
		    , #{hbtBoardContent}
		    , #{memberVO.memCode}
		    <if test='isPrivate.equals("Y")'>
		    , #{isPrivate}
		    , #{privatePw}
		    </if>
		    <if test='isNotice.equals("Y")'>
		    , #{isNotice}
		    </if>
		)
	</insert>
	
	<select id="getFreqRequestList" resultMap="freqRequest">
		SELECT FREQ_REQUEST_CODE
			, FREQ_REQUEST_TITLE
			, FREQ_REQUEST_CONTENT
			, REQ.TYPE_REQUEST_CODE
			, TYPE_REQUEST_NAME
		FROM HBT_FREQ_REQUEST REQ, TYPE_REQUEST TYP
		WHERE REQ.TYPE_REQUEST_CODE = TYP.TYPE_REQUEST_CODE
		ORDER BY TYPE_REQUEST_CODE, FREQ_REQUEST_CODE DESC
	</select>
	
	<select id="getBoardList" resultMap="board">
		SELECT HBT_BOARD_NUM
		    , HBT_BOARD_TITLE
		    , HBT_BOARD_CONTENT
		    , HBT_BOARD_CNT       
		    , REPLY_CNT
		    , TO_CHAR(HBT_BOARD_REG_DATE, 'YYYY-MM-DD') HBT_BOARD_REG_DATE
		    , MEM_CODE
		    , (SELECT MEM_ID FROM HBT_MEM WHERE MEM_CODE = HBT_BOARD.MEM_CODE) MEM_ID
			, IS_PRIVATE
			<if test='isPrivate != null and isPrivate.equals("Y")'>
			, PRIVATE_PW
			</if>
		FROM HBT_BOARD
		<if test='isNotice != null'>
		WHERE IS_NOTICE = #{isNotice}
		</if>
		<if test="groundSearchVO != null">
		AND UPPER(${groundSearchVO.searchKey}) LIKE '%'||UPPER(#{groundSearchVO.searchVal})||'%'
		</if>
		ORDER BY HBT_BOARD_NUM DESC
	</select>
	
	<select id="getBoardDetail" resultMap="board">
		SELECT HBT_BOARD_NUM
			, MEM_CODE
			, HBT_BOARD_TITLE
			, HBT_BOARD_CONTENT
			, HBT_BOARD_REG_DATE
			, HBT_BOARD_CNT
			, IS_NOTICE
			, REPLY_CNT
			, IS_PRIVATE
			, PRIVATE_PW
		FROM HBT_BOARD
	</select>
	
	<select id="getBoardNoticeDetail" resultMap="board">
		SELECT HBT_BOARD_NUM
		    , HBT_BOARD_TITLE
		    , HBT_BOARD_CONTENT
		    , TO_CHAR(HBT_BOARD_REG_DATE, 'YYYY-MM-DD') HBT_BOARD_REG_DATE
		    , MEM_CODE
		    , (SELECT MEM_ID FROM HBT_MEM WHERE MEM_CODE = HBT_BOARD.MEM_CODE) MEM_ID
		    , REPLY_CNT
		    , HBT_BOARD_CNT
		FROM HBT_BOARD
		WHERE HBT_BOARD_NUM = #{hbtBoardNum}
	</select>
	
	<delete id="delNotice">
		DELETE FROM HBT_BOARD 
		WHERE HBT_BOARD_NUM = #{hbtBoardNum}
	</delete>
	
	<update id="updateBoardNotice">
		UPDATE HBT_BOARD
		SET HBT_BOARD_TITLE = #{hbtBoardTitle}, HBT_BOARD_CONTENT = #{hbtBoardContent}
		WHERE HBT_BOARD_NUM = #{hbtBoardNum}
	</update>
	
</mapper>


























